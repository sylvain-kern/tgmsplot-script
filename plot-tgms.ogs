/*	
*	plot-tgms.ogs
*	Asks the user to choose for M/z parameters and plots the MS data
*	
*/


page.active$ = mz sheet;

StringArray saTexts;
Dataset dsDefaults;


// Add texts to StringArray and default checked states to Dataset (0=unchecked, 1=checked).

range rr = col(mzlabels);

int ndatablocks = col(ndblks)[1];

if(ndatablocks==1) {
	for(int i=2; i<=rr.GetSize(); i++) {
		saTexts.add(col(mz)[$(i)]$);
		dsdefaults.Add(0);
	}
}
else {
	for(int i=4; i<=rr.GetSize(); i++) {
		saTexts.add(col(mz)[$(i)]$);
		dsdefaults.Add(0);
	}
}

	
// Combine texts in StringArray into a single string variable with each option separated by a "|".
string strTexts$;
int nSize = saTexts.GetSize();
loop(nn, 1, nSize)
{
	strTexts$ += saTexts.GetAt(nn)$;
	if (nn != nSize)
		strTexts$ += "|";
}

 
Dataset dsChecked;	// Create a Dataset to hold the indices of the checkboxes that get checked while dialog is open.
// Integer flag to determine if Cancel button was clicked in dialog.
// Must set it to true (1) to work properly.
int nCancelled = 1;

// Surround X-Function call with braces to trap any error returned during execution.
// If user clicks the Cancel button, there would be an error generated. This will stop that behavior.
{
dlgChkList inames:=strTexts$ title:="MS vs temperature" desc:="Choose the M/z to plot:" ochks:=dsDefaults osel:=dsChecked;

// If user clicked the Cancel button, the following line will not run and nCancelled will remain equal to 1.
nCancelled = 0;
}

// Test of user clicked the Cancel button and if so, stop script execution.
if (1 == nCancelled)
	return;

// User did not click Cancel, so output the checked checkboxes by looping through the Dataset of indices
// and using the values from that Dataset to get the relevant Texts from the original StringArray.
type "The following M/z curves will be plotted:";
int nSize = dsChecked.GetSize();
loop(nn, 1, nSize)
{
	// Because GetAt() returns a string, don't forget to add a $ at end of function call.
	type saTexts.GetAt(dsChecked[nn])$;
}

ty "";

string wn$=%H;
string ms_wk$ = "ms data";
string tg_wk$ = "tg data";
string mz_wk$ = "mz sheet";


win -a %(wn$);

page.active$ = ms data;

/*	Getting tmin and tmax to display the graph in the right range */

page.active$ = tg data;

int firstsegment = col(A)[1];

ty $(firstsegment);

double tmin = col(temp)[1];
double tmax = col(temp)[$(firstsegment)];

if (firstsegment==0){
	range temperature = col(temp);
	tmax = temperature[temperature.GetSize()];
}

ty "Plotting for the temperature increase segment";
ty "from $(tmin) °C to $(tmax) °C";


/*	P L O T T I N G   T G 	*/

plotxy iy:=(col(temp),col(blsub)) plot:=200 size:=4 ogl:=1 color:= 1;	// plot vs temperature
layer.x.from = tmin;
layer.x.to = tmax;
layer.x.showAxes=3;
layer.x2.ticks=0;

layer.x.TicksByData$ = 0 200 400 600 800 1000 1200 1400;
layer.x.mticksbydata$ = 100 300 500 700 900 1100 1300;

//layer.y.to = 0;
legend.y1 = 1;
legend.x1 = legend.x1 - (tmax-tmin)/2;	

/*	P L O T T I N G   M S 	*/

if(ndatablocks == 1){
	for(int i=1; i<=dsChecked.GetSize(); i++){
		
		int colnum = dsChecked[$(i)]+3;	// get the right column for ms
		
		int current_layer = i+1;
	
		//string simin$ = [wn$]mz_wk$!col(cmin)[$(dsChecked[$(i)]+1)]$;
		//double imin = %(simin$);
		
		string simin$ = [wn$]ms_wk$!col($(colnum))[1]$;
		double imin = %(simin$);
		
		string simax$ = [wn$]mz_wk$!col(cmax)[$(dsChecked[$(i)]+1)]$;
		double imax = %(simax$)*1.1;
		
		plotxy iy:=[wn$]ms_wk$!(col(temp),col($(colnum))) plot:=202 size:=4 ogl:=$(current_layer) color:= $(i+1);	// plot vs temperature
		
		page.active$ = $(current_layer);
		
		layer.x.showLabels=0;
		layer.y.showAxes=2;
		layer.y.showLabels=0; 
		layer.x.TicksByData$ = 0 200 400 600 800 1000 1200 1400;
		layer.x.mticksbydata$ = 100 300 500 700 900 1100 1300;
		layer.y2.ticks=0;
		
		set %c -k $(i);	//Change symbol
		set %c -kf 1; //Change interior to be open
		
		xb.text$ = "";
		yl.text$ = "";
		
		imin = imin - (imax-imin)*0.4;
		
		layer.x.from = tmin;
		layer.x.to = tmax;
		layer.y.from = imin;
		layer.y.to = imax;
		
		legend.y1 = legend.y1 - (imax-imin)*(i/15) - (imax-imin)/10;
		legend.x1 = legend.x1 - (tmax-tmin)/8;	

		set %c -skip 7;	//skip symbols
	}
}
else if(ndatablocks == 4) {
	for(int i=1; i<=dsChecked.GetSize(); i++){
		
		int colnum = dsChecked[$(i)]+4;	// get the right column for ms
		
		int current_layer = i+1;
	
		//string simin$ = [wn$]mz_wk$!col(cmin)[$(dsChecked[$(i)]+1)]$;
		//double imin = %(simin$);
		
		string simin$ = [wn$]ms_wk$!col($(colnum))[10]$;
		double imin = %(simin$);
		
		string simax$ = [wn$]mz_wk$!col(cmax)[$(dsChecked[$(i)])+3]$;
		double imax = %(simax$)*1.1;
		
		plotxy iy:=[wn$]ms_wk$!(col(temp),col($(colnum))) plot:=202 size:=4 ogl:=$(current_layer) color:= $(i+1);	// plot vs temperature
		
		page.active$ = $(current_layer);
		
		layer.x.showLabels=0;
		layer.y.showAxes=2;
		layer.y.showLabels=0; 
		layer.x.TicksByData$ = 0 200 400 600 800 1000 1200 1400;
		layer.x.mticksbydata$ = 100 300 500 700 900 1100 1300;
		layer.y2.ticks=0;
		
		set %c -k $(i);	//Change symbol
		set %c -kf 1; //Change interior to be open
		
		xb.text$ = "";
		yl.text$ = "";
		
		imin = imin - (imax-imin)*0.4;
		
		layer.x.from = tmin;
		layer.x.to = tmax;
		layer.y.from = imin;
		layer.y.to = imax;
		
		legend.y1 = legend.y1 - (imax-imin)*(i/15) - (imax-imin)/10;
		legend.x1 = legend.x1 - (tmax-tmin)/8;	
		
		set %c -skip 7;	//skip symbols
	}
}

yr.text$ = "current/arbitrary units";

LAYER.Y.type=$(layertype);


ty "Data plotted!";
ty "";
ty "If you want to do another plot, close or minimise this one before.";

win -a %(wn$);
